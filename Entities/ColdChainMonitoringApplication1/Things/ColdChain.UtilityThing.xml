<?xml version="1.0" encoding="UTF-8"?>
<Entities
 majorVersion="9"
 minorVersion="1"
 universal="password">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         inheritedValueStream=""
         name="ColdChain.UtilityThing"
         projectName="ColdChainMonitoringApplication1"
         published="false"
         tags=""
         thingTemplate="GenericThing"
         valueStream="ColdChainVS_1">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read>
                    <Principal
                     isPermitted="true"
                     name="ColdChainAdmin_1"
                     type="Group"></Principal>
                    <Principal
                     isPermitted="true"
                     name="ColdChainSevice_1"
                     type="Group"></Principal>
                </Read>
                <Update>
                    <Principal
                     isPermitted="true"
                     name="ColdChainAdmin_1"
                     type="Group"></Principal>
                </Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="Active">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="Warehouse">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="inactive">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke></ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="Temp">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="Humidity">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="active">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke></ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="Inactive">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="Store">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="QueryPropertyHistory">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="Pressure">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="Transit">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="ColdChainAdmin_1"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="ColdChainSevice_1"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="ColdChainOrganization:Administrator"
                     type="OrganizationalUnit"></Principal>
                    <Principal
                     isPermitted="true"
                     name="ColdChainOrganization:Service_Engineer"
                     type="OrganizationalUnit"></Principal>
                    <Principal
                     isPermitted="true"
                     name="ColdChainTest.Org"
                     type="Organization"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="active"
                     ordinal="2"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Humid"
                     ordinal="4"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="inactive"
                     ordinal="3"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Pressur"
                     ordinal="6"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.isLogged="true"
                     aspect.isPersistent="true"
                     baseType="NUMBER"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="Temper"
                     ordinal="5"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Active">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="eta">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="LOCATION"
                             description=""
                             name="destination"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="LOCATION"
                             description=""
                             name="location"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Humidity">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Inactive">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Pressure">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="routemap">
                        <ResultType
                         aspect.dataShape="ColdChainRoute"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="LOCATION"
                             description=""
                             name="CheckPoint1"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="LOCATION"
                             description=""
                             name="CheckPoint2"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="LOCATION"
                             description=""
                             name="CheckPoint3"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="LOCATION"
                             description=""
                             name="checkPoint4"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="LOCATION"
                             description=""
                             name="Destination"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="LOCATION"
                             description=""
                             name="Origin"
                             ordinal="5"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Store">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Temp">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Transit">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="UserName">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="Warehouse">
                        <ResultType
                         baseType="NUMBER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Active">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let allDevice = ThingTemplates["ColdChainTT_1"].GetImplementingThingsWithData();
                                        let active = 0;
                                        for (let i = 0; i < allDevice.getRowCount(); i++) {
                                            if( allDevice.getRow(i).Status == "Active")
                                            	active++;
                                        }
                                        me.active = active;
                                        let result = active;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="eta">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        try{
                                            let dist = distanceBetween(location, destination, "");
                                            let inKm = dist*1.60934;
                                            let avg= inKm/12;
                                            result=Math.round(avg)+ "hrs";
                                        }
                                        catch(err){
                                            logger.error("Error in "+err.lineNumber +":"+err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Humidity">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let allDevice = ThingTemplates["ColdChainTT_1"].GetImplementingThingsWithData();
                                        let humidity = 0;
                                        for (let i = 0; i < allDevice.getRowCount(); i++) {
                                           let humid = allDevice.getRow(i).Humidity;
                                            if( humid > 57 || humid < 22 )
                                            	humidity++;
                                        }
                                        me.Humid = humidity;
                                        let result = humidity;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Inactive">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let allDevice = ThingTemplates["ColdChainTT_1"].GetImplementingThingsWithData();
                                        let inactive = 0;
                                        for (let i = 0; i < allDevice.getRowCount(); i++) {
                                            if( allDevice.getRow(i).Status == "Inactive")
                                            	inactive++;
                                        }
                                        me.inactive = inactive;
                                        let result = inactive;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Pressure">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let allDevice = ThingTemplates["ColdChainTT_1"].GetImplementingThingsWithData();
                                        let pressure = 0;
                                        for (let i = 0; i < allDevice.getRowCount(); i++) { 
                                           let pre = allDevice.getRow(i).Pressure;
                                            if( pre > 57 || pre < 22 )
                                            	pressure++;
                                        }
                                        me.Pressur = pressure;
                                        let result = pressure;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="routemap">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let route = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "ColdChainRoute"
                                        });
                                        let entry1 = { 
                                            location : Origin
                                                    };
                                        route.AddRow(entry1);
                                        let entry2 = { 
                                            location : CheckPoint1
                                                    };
                                        route.AddRow(entry2);
                                        let entry3 = { 
                                            location : CheckPoint2
                                                    };
                                        route.AddRow(entry3);
                                        let entry4 = { 
                                            location : CheckPoint3
                                                    };
                                        route.AddRow(entry4);
                                        let entry5 = { 
                                            location : checkPoint4
                                                    };
                                        route.AddRow(entry5);
                                        let entry6 = { 
                                            location : Destination
                                                    };
                                        route.AddRow(entry6);
                                        result = route;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Store">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let allDevice = ThingTemplates["ColdChainTT_1"].GetImplementingThingsWithData();
                                        let store = 0;
                                        for (let i = 0; i < allDevice.getRowCount(); i++) {
                                            if( allDevice.getRow(i).TruckLocationName == "Store")
                                            	store++;
                                        }
                                        let result = store;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Temp">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let allDevice = ThingTemplates["ColdChainTT_1"].GetImplementingThingsWithData();
                                        let temp = 0;
                                        for (let i = 0; i < allDevice.getRowCount(); i++) { 
                                            let temper = allDevice.getRow(i).Temperature;
                                            if( temper > 10 || temper < -10 )
                                            	temp++;
                                        }
                                        me.Temper = temp;
                                        let result = temp;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Transit">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let allDevice = ThingTemplates["ColdChainTT_1"].GetImplementingThingsWithData();
                                        let transit = 0;
                                        for (let i = 0; i < allDevice.getRowCount(); i++) {
                                            let tran = allDevice.getRow(i).TruckLocationName;
                                            if( tran == "Checkpoint1" || tran == "Checkpoint2" || tran == "Checkpoint3" || tran == "Checkpoint4" )
                                            	transit++;
                                        }
                                        let result = transit;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="UserName">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        result = Resources["CurrentSessionInfo"].GetCurrentUser();
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="Warehouse">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        let allDevice = ThingTemplates["ColdChainTT_1"].GetImplementingThingsWithData();
                                        let warehouse = 0;
                                        for (let i = 0; i < allDevice.getRowCount(); i++) {
                                            if( allDevice.getRow(i).TruckLocationName == "Warehouse")
                                            	warehouse++;
                                        }
                                        let result = warehouse;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="active"></AlertDefinitions>
                <AlertDefinitions
                 name="Humid"></AlertDefinitions>
                <AlertDefinitions
                 name="inactive"></AlertDefinitions>
                <AlertDefinitions
                 name="Pressur"></AlertDefinitions>
                <AlertDefinitions
                 name="Temper"></AlertDefinitions>
            </AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties>
                <Pressur>
                    <Value>6.0</Value>
                    <Timestamp>2021-02-17T16:08:59.036Z</Timestamp>
                    <Quality>GOOD</Quality>
                </Pressur>
                <inactive>
                    <Value>4.0</Value>
                    <Timestamp>2021-02-17T16:08:59.036Z</Timestamp>
                    <Quality>GOOD</Quality>
                </inactive>
                <Humid>
                    <Value>3.0</Value>
                    <Timestamp>2021-02-17T16:08:58.989Z</Timestamp>
                    <Quality>GOOD</Quality>
                </Humid>
                <Temper>
                    <Value>3.0</Value>
                    <Timestamp>2021-02-17T16:09:00.005Z</Timestamp>
                    <Quality>GOOD</Quality>
                </Temper>
                <active>
                    <Value>4.0</Value>
                    <Timestamp>2021-02-17T16:08:58.973Z</Timestamp>
                    <Quality>GOOD</Quality>
                </active>
            </ThingProperties>
        </Thing>
    </Things>
</Entities>
